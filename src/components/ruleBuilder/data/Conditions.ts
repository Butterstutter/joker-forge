import { ConditionTypeDefinition } from "../types";
import {
  RectangleStackIcon,
  UserIcon,
  ArchiveBoxIcon,
  InformationCircleIcon,
  SparklesIcon,
} from "@heroicons/react/24/outline";
import { CategoryDefinition } from "./Triggers";

export const CONDITION_CATEGORIES: CategoryDefinition[] = [
  {
    label: "Hand & Cards",
    icon: RectangleStackIcon,
  },
  {
    label: "Player Resources",
    icon: UserIcon,
  },
  {
    label: "Deck & Jokers",
    icon: ArchiveBoxIcon,
  },
  {
    label: "Game State",
    icon: InformationCircleIcon,
  },
  {
    label: "Special",
    icon: SparklesIcon,
  },
];

const COMPARISON_OPERATORS = [
  { value: "equals", label: "equals" },
  { value: "not_equals", label: "not equals" },
  { value: "greater_than", label: "greater than" },
  { value: "less_than", label: "less than" },
  { value: "greater_equals", label: "greater than or equal to" },
  { value: "less_equals", label: "less than or equal to" },
];

const CARD_SCOPE = [
  { value: "scoring", label: "Scoring cards only" },
  { value: "all_played", label: "All played cards" },
];

const CARD_RANKS = [
  { value: "2", label: "2" },
  { value: "3", label: "3" },
  { value: "4", label: "4" },
  { value: "5", label: "5" },
  { value: "6", label: "6" },
  { value: "7", label: "7" },
  { value: "8", label: "8" },
  { value: "9", label: "9" },
  { value: "10", label: "10" },
  { value: "J", label: "Jack" },
  { value: "Q", label: "Queen" },
  { value: "K", label: "King" },
  { value: "A", label: "Ace" },
];

const CARD_RANK_GROUPS = [
  { value: "face", label: "Face Card (J,Q,K)" },
  { value: "even", label: "Even Card (2,4,6,8,10,Q)" },
  { value: "odd", label: "Odd Card (A,3,5,7,9,J,K)" },
];

const CARD_SUITS = [
  { value: "Spades", label: "Spades" },
  { value: "Hearts", label: "Hearts" },
  { value: "Diamonds", label: "Diamonds" },
  { value: "Clubs", label: "Clubs" },
];

const CARD_SUIT_GROUPS = [
  { value: "red", label: "Red Suit (Hearts, Diamonds)" },
  { value: "black", label: "Black Suit (Spades, Clubs)" },
];

const HAND_TYPES = [
  { value: "High Card", label: "High Card" },
  { value: "Pair", label: "Pair" },
  { value: "Two Pair", label: "Two Pair" },
  { value: "Three of a Kind", label: "Three of a Kind" },
  { value: "Straight", label: "Straight" },
  { value: "Flush", label: "Flush" },
  { value: "Full House", label: "Full House" },
  { value: "Four of a Kind", label: "Four of a Kind" },
  { value: "Five of a Kind", label: "Five of a Kind" },
  { value: "Straight Flush", label: "Straight Flush" },
  { value: "Royal Flush", label: "Royal Flush" },
  { value: "Flush House", label: "Flush House" },
  { value: "Flush Five", label: "Flush Five" },
];

const ENHANCEMENT_TYPES = [
  { value: "m_gold", label: "Gold" },
  { value: "m_steel", label: "Steel" },
  { value: "m_glass", label: "Glass" },
  { value: "m_wild", label: "Wild" },
  { value: "m_mult", label: "Mult" },
  { value: "m_lucky", label: "Lucky" },
  { value: "m_stone", label: "Stone" },
  { value: "m_bonus", label: "Bonus" },
];

const EDITION_TYPES = [
  { value: "e_foil", label: "Foil (+50 Chips)" },
  { value: "e_holo", label: "Holographic (+10 Mult)" },
  { value: "e_polychrome", label: "Polychrome (X1.5 Mult)" },
  { value: "e_negative", label: "Negative (+1 Joker slot)" },
];

const SEAL_TYPES = [
  { value: "gold", label: "Gold Seal ($3 when played)" },
  { value: "red", label: "Red Seal (Retrigger card)" },
  { value: "blue", label: "Blue Seal (Creates Planet card)" },
  { value: "purple", label: "Purple Seal (Creates Tarot when discarded)" },
];

export const CONDITION_TYPES: ConditionTypeDefinition[] = [
  {
    id: "hand_type",
    label: "Hand Type",
    description: "Check the type of poker hand",
    applicableTriggers: ["hand_played", "card_scored", "after_hand_played"],
    params: [
      {
        id: "card_scope",
        type: "select",
        label: "Card Scope",
        options: CARD_SCOPE,
        default: "scoring",
      },
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: [
          { value: "contains", label: "contains" },
          { value: "equals", label: "equals" },
          { value: "not_equals", label: "not equals" },
        ],
      },
      {
        id: "value",
        type: "select",
        label: "Hand Type",
        options: [
          ...HAND_TYPES,
          { value: "most_played_hand", label: "Most Played Hand" },
          { value: "least_played_hand", label: "Least Played Hand" },
        ],
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "card_count",
    label: "Card Count",
    description: "Check the number of cards in the played hand",
    applicableTriggers: ["hand_played", "card_scored", "after_hand_played"],
    params: [
      {
        id: "card_scope",
        type: "select",
        label: "Card Scope",
        options: CARD_SCOPE,
        default: "scoring",
      },
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Number of Cards",
        min: 1,
        max: 52,
        default: 5,
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "suit_count",
    label: "Suit Count",
    description: "Check how many cards of a specific suit are in the hand",
    applicableTriggers: ["hand_played", "card_scored", "after_hand_played"],
    params: [
      {
        id: "card_scope",
        type: "select",
        label: "Card Scope",
        options: CARD_SCOPE,
        default: "scoring",
      },
      {
        id: "suit_type",
        type: "select",
        label: "Suit Type",
        options: [
          { value: "specific", label: "Specific Suit" },
          { value: "group", label: "Suit Group" },
        ],
      },
      {
        id: "specific_suit",
        type: "select",
        label: "Suit",
        options: CARD_SUITS,
        showWhen: {
          parameter: "suit_type",
          values: ["specific"],
        },
      },
      {
        id: "suit_group",
        type: "select",
        label: "Suit Group",
        options: CARD_SUIT_GROUPS,
        showWhen: {
          parameter: "suit_type",
          values: ["group"],
        },
      },
      {
        id: "quantifier",
        type: "select",
        label: "Condition",
        options: [
          { value: "all", label: "All cards must be this suit" },
          { value: "none", label: "No cards can be this suit" },
          { value: "exactly", label: "Exactly N cards of this suit" },
          { value: "at_least", label: "At least N cards of this suit" },
          { value: "at_most", label: "At most N cards of this suit" },
        ],
      },
      {
        id: "count",
        type: "number",
        label: "Count",
        default: 1,
        min: 1,
        showWhen: {
          parameter: "quantifier",
          values: ["exactly", "at_least", "at_most"],
        },
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "rank_count",
    label: "Rank Count",
    description: "Check how many cards of a specific rank are in the hand",
    applicableTriggers: ["hand_played", "card_scored", "after_hand_played"],
    params: [
      {
        id: "card_scope",
        type: "select",
        label: "Card Scope",
        options: CARD_SCOPE,
        default: "scoring",
      },
      {
        id: "rank_type",
        type: "select",
        label: "Rank Type",
        options: [
          { value: "specific", label: "Specific Rank" },
          { value: "group", label: "Rank Group" },
        ],
      },
      {
        id: "specific_rank",
        type: "select",
        label: "Rank",
        options: CARD_RANKS,
        showWhen: {
          parameter: "rank_type",
          values: ["specific"],
        },
      },
      {
        id: "rank_group",
        type: "select",
        label: "Rank Group",
        options: CARD_RANK_GROUPS,
        showWhen: {
          parameter: "rank_type",
          values: ["group"],
        },
      },
      {
        id: "quantifier",
        type: "select",
        label: "Condition",
        options: [
          { value: "all", label: "All cards must be this rank" },
          { value: "none", label: "No cards can be this rank" },
          { value: "exactly", label: "Exactly N cards of this rank" },
          { value: "at_least", label: "At least N cards of this rank" },
          { value: "at_most", label: "At most N cards of this rank" },
        ],
      },
      {
        id: "count",
        type: "number",
        label: "Count",
        default: 1,
        min: 1,
        showWhen: {
          parameter: "quantifier",
          values: ["exactly", "at_least", "at_most"],
        },
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "card_rank",
    label: "Card Rank",
    description: "Check the rank of the card",
    applicableTriggers: [
      "card_scored",
      "card_discarded",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "card_destroyed",
    ],
    params: [
      {
        id: "rank_type",
        type: "select",
        label: "Rank Type",
        options: [
          { value: "specific", label: "Specific Rank" },
          { value: "group", label: "Rank Group" },
        ],
      },
      {
        id: "specific_rank",
        type: "select",
        label: "Rank",
        options: CARD_RANKS,
        showWhen: {
          parameter: "rank_type",
          values: ["specific"],
        },
      },
      {
        id: "rank_group",
        type: "select",
        label: "Rank Group",
        options: CARD_RANK_GROUPS,
        showWhen: {
          parameter: "rank_type",
          values: ["group"],
        },
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "card_suit",
    label: "Card Suit",
    description: "Check the suit of the card",
    applicableTriggers: [
      "card_scored",
      "card_discarded",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "card_destroyed",
    ],
    params: [
      {
        id: "suit_type",
        type: "select",
        label: "Suit Type",
        options: [
          { value: "specific", label: "Specific Suit" },
          { value: "group", label: "Suit Group" },
        ],
      },
      {
        id: "specific_suit",
        type: "select",
        label: "Suit",
        options: CARD_SUITS,
        showWhen: {
          parameter: "suit_type",
          values: ["specific"],
        },
      },
      {
        id: "suit_group",
        type: "select",
        label: "Suit Group",
        options: CARD_SUIT_GROUPS,
        showWhen: {
          parameter: "suit_type",
          values: ["group"],
        },
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "card_enhancement",
    label: "Card Enhancement",
    description: "Check if the card has a specific enhancement",
    applicableTriggers: [
      "card_scored",
      "card_discarded",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "card_destroyed",
    ],
    params: [
      {
        id: "enhancement",
        type: "select",
        label: "Enhancement Type",
        options: [
          { value: "any", label: "Any Enhancement" },
          ...ENHANCEMENT_TYPES,
        ],
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "card_edition",
    label: "Card Edition",
    description: "Check if the card has a specific edition",
    applicableTriggers: [
      "card_scored",
      "card_discarded",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "card_destroyed",
    ],
    params: [
      {
        id: "edition",
        type: "select",
        label: "Edition Type",
        options: [
          { value: "any", label: "Any Edition" },
          { value: "none", label: "No Edition" },
          ...EDITION_TYPES,
        ],
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "card_seal",
    label: "Card Seal",
    description: "Check if the card has a specific seal",
    applicableTriggers: [
      "card_scored",
      "card_discarded",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "card_destroyed",
    ],
    params: [
      {
        id: "seal",
        type: "select",
        label: "Seal Type",
        options: [{ value: "any", label: "Any Seal" }, ...SEAL_TYPES],
      },
    ],
    category: "Hand & Cards",
  },
  {
    id: "player_money",
    label: "Player Money",
    description: "Check how much money the player has",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Amount ($)",
        default: 10,
      },
    ],
    category: "Player Resources",
  },
  {
    id: "generic_compare",
    label: "Generic Compare",
    description: "Compare two custom values with an operator",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "value1",
        type: "number",
        label: "First Value",
        default: 0,
      },
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value2",
        type: "number",
        label: "Second Value",
        default: 0,
      },
    ],
    category: "Special",
  },
  {
    id: "remaining_hands",
    label: "Remaining Hands",
    description: "Check how many hands the player has left",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Number of Hands",
        min: 0,
        default: 1,
      },
    ],
    category: "Player Resources",
  },
  {
    id: "remaining_discards",
    label: "Remaining Discards",
    description: "Check how many discards the player has left",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Number of Discards",
        min: 0,
        default: 1,
      },
    ],
    category: "Player Resources",
  },
  {
    id: "glass_card_destroyed",
    label: "Glass Card Destroyed",
    description: "Check if any glass cards were destroyed/shattered",
    applicableTriggers: ["card_destroyed"],
    params: [],
    category: "Hand & Cards",
  },
  {
    id: "joker_count",
    label: "Joker Count",
    description: "Check how many jokers the player has",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Number of Jokers",
        min: 0,
        default: 1,
      },
    ],
    category: "Deck & Jokers",
  },
  {
    id: "specific_joker",
    label: "Specific Joker",
    description: "Check if a specific joker is in your collection",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Condition",
        options: [
          { value: "has", label: "Has this joker" },
          { value: "does_not_have", label: "Does not have this joker" },
        ],
        default: "has",
      },
      {
        id: "joker_key",
        type: "text",
        label: "Joker Key (e.g., j_joker, j_greedy_joker, or just joker)",
        default: "j_joker",
      },
    ],
    category: "Deck & Jokers",
  },
  {
    id: "internal_variable",
    label: "Internal Variable",
    description: "Check the value of an internal variable for this joker",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "variable_name",
        type: "text",
        label: "Variable Name",
        default: "var1",
      },
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Value",
        default: 0,
      },
    ],
    category: "Special",
  },
  {
    id: "consumable_held",
    label: "Consumable Held",
    description: "Check if a specific type of consumable is held",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Condition",
        options: [
          { value: "has", label: "Has this consumable" },
          { value: "does_not_have", label: "Does not have this consumable" },
        ],
        default: "has",
      },
      {
        id: "consumable_type",
        type: "select",
        label: "Consumable Type",
        options: [
          { value: "any", label: "Any Consumable" },
          { value: "tarot", label: "Any Tarot Card" },
          { value: "planet", label: "Any Planet Card" },
          { value: "spectral", label: "Any Spectral Card" },
          { value: "specific", label: "Specific Card" },
        ],
        default: "any",
      },
      {
        id: "specific_card",
        type: "select",
        label: "Specific Card",
        options: [
          // Tarot Cards
          { value: "c_fool", label: "The Fool" },
          { value: "c_magician", label: "The Magician" },
          { value: "c_high_priestess", label: "The High Priestess" },
          { value: "c_empress", label: "The Empress" },
          { value: "c_emperor", label: "The Emperor" },
          { value: "c_hierophant", label: "The Hierophant" },
          { value: "c_lovers", label: "The Lovers" },
          { value: "c_chariot", label: "The Chariot" },
          { value: "c_justice", label: "Justice" },
          { value: "c_hermit", label: "The Hermit" },
          { value: "c_wheel_of_fortune", label: "Wheel of Fortune" },
          { value: "c_strength", label: "Strength" },
          { value: "c_hanged_man", label: "The Hanged Man" },
          { value: "c_death", label: "Death" },
          { value: "c_temperance", label: "Temperance" },
          { value: "c_devil", label: "The Devil" },
          { value: "c_tower", label: "The Tower" },
          { value: "c_star", label: "The Star" },
          { value: "c_moon", label: "The Moon" },
          { value: "c_sun", label: "The Sun" },
          { value: "c_judgement", label: "Judgement" },
          { value: "c_world", label: "The World" },
          // Planet Cards
          { value: "c_pluto", label: "Pluto" },
          { value: "c_mercury", label: "Mercury" },
          { value: "c_uranus", label: "Uranus" },
          { value: "c_venus", label: "Venus" },
          { value: "c_saturn", label: "Saturn" },
          { value: "c_jupiter", label: "Jupiter" },
          { value: "c_earth", label: "Earth" },
          { value: "c_mars", label: "Mars" },
          { value: "c_neptune", label: "Neptune" },
          { value: "c_planet_x", label: "Planet X" },
          { value: "c_ceres", label: "Ceres" },
          { value: "c_eris", label: "Eris" },
          // Spectral Cards
          { value: "c_familiar", label: "Familiar" },
          { value: "c_grim", label: "Grim" },
          { value: "c_incantation", label: "Incantation" },
          { value: "c_talisman", label: "Talisman" },
          { value: "c_aura", label: "Aura" },
          { value: "c_wraith", label: "Wraith" },
          { value: "c_sigil", label: "Sigil" },
          { value: "c_ouija", label: "Ouija" },
          { value: "c_ectoplasm", label: "Ectoplasm" },
          { value: "c_immolate", label: "Immolate" },
          { value: "c_ankh", label: "Ankh" },
          { value: "c_deja_vu", label: "Deja Vu" },
          { value: "c_hex", label: "Hex" },
          { value: "c_trance", label: "Trance" },
          { value: "c_medium", label: "Medium" },
          { value: "c_cryptid", label: "Cryptid" },
          { value: "c_soul", label: "The Soul" },
          { value: "c_black_hole", label: "Black Hole" },
        ],
        showWhen: {
          parameter: "consumable_type",
          values: ["specific"],
        },
      },
    ],
    category: "Player Resources",
  },
  {
    id: "blind_type",
    label: "Blind Type",
    description: "Check the type of the current blind",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "shop_reroll",
      "card_sold",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "blind_type",
        type: "select",
        label: "Blind Type",
        options: [
          { value: "small", label: "Small Blind" },
          { value: "big", label: "Big Blind" },
          { value: "boss", label: "Boss Blind" },
        ],
      },
    ],
    category: "Game State",
  },
  {
    id: "check_blind_requirements",
    label: "Blind Requirements",
    description:
      "Check what percentage of the blind requirement the current base hand score represents (e.g., 110% means you've exceeded the blind by 10%, values over 100% check if you've exceeded the blind)",
    applicableTriggers: [
      "after_hand_played",
      "hand_played",
      "card_scored",
      "round_end",
      "hand_discarded",
      "card_discarded",
      "selling_self",
      "card_sold",
      "hand_drawn",
      "first_hand_drawn",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
        default: "greater_equals",
      },
      {
        id: "percentage",
        type: "number",
        label: "Percentage (%)",
        min: 1,
        max: 500,
        default: 25,
      },
    ],
    category: "Game State",
  },
  {
    id: "ante_level",
    label: "Ante Level",
    description: "Check the current ante level",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Ante Level",
        min: 1,
        default: 1,
      },
    ],
    category: "Game State",
  },
  {
    id: "first_played_hand",
    label: "First Played Hand",
    description: "Check if this is the first hand played in the current round",
    applicableTriggers: [
      "hand_played",
      "card_scored",
      "card_discarded",
      "after_hand_played",
    ],
    params: [],
    category: "Game State",
  },
  {
    id: "first_discarded_hand",
    label: "First Discarded Hand",
    description:
      "Check if this is the first hand discarded in the current round",
    applicableTriggers: ["card_discarded", "hand_discarded"],
    params: [],
    category: "Game State",
  },
  {
    id: "hand_size",
    label: "Hand Size",
    description: "Check the current hand size",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Hand Size",
        min: 1,
        max: 20,
        default: 8,
      },
    ],
    category: "Player Resources",
  },
  {
    id: "deck_size",
    label: "Deck Size",
    description: "Check the size of the deck",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "size_type",
        type: "select",
        label: "Size Type",
        options: [
          { value: "remaining", label: "Remaining in Deck" },
          { value: "total", label: "Total Deck Size" },
        ],
        default: "remaining",
      },
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Number of Cards",
        min: 0,
        max: 200,
        default: 52,
      },
    ],
    category: "Deck & Jokers",
  },
  {
    id: "deck_count",
    label: "Deck Count",
    description: "Count cards in your entire deck by property",
    applicableTriggers: [
      "blind_selected",
      "card_scored",
      "hand_played",
      "blind_skipped",
      "boss_defeated",
      "booster_opened",
      "booster_skipped",
      "consumable_used",
      "hand_drawn",
      "first_hand_drawn",
      "shop_exited",
      "card_discarded",
      "hand_discarded",
      "round_end",
      "shop_reroll",
      "card_held_in_hand",
      "card_held_in_hand_end_of_round",
      "after_hand_played",
      "card_sold",
      "card_bought",
      "selling_self",
      "game_over",
      "card_destroyed",
    ],
    params: [
      {
        id: "property_type",
        type: "select",
        label: "Property Type",
        options: [
          { value: "rank", label: "Rank" },
          { value: "suit", label: "Suit" },
          { value: "enhancement", label: "Enhancement" },
          { value: "seal", label: "Seal" },
          { value: "edition", label: "Edition" },
        ],
        default: "enhancement",
      },
      {
        id: "rank",
        type: "select",
        label: "Rank",
        options: [
          { value: "any", label: "Any Rank" },
          { value: "2", label: "2" },
          { value: "3", label: "3" },
          { value: "4", label: "4" },
          { value: "5", label: "5" },
          { value: "6", label: "6" },
          { value: "7", label: "7" },
          { value: "8", label: "8" },
          { value: "9", label: "9" },
          { value: "10", label: "10" },
          { value: "J", label: "Jack" },
          { value: "Q", label: "Queen" },
          { value: "K", label: "King" },
          { value: "A", label: "Ace" },
        ],
        showWhen: {
          parameter: "property_type",
          values: ["rank"],
        },
      },
      {
        id: "suit",
        type: "select",
        label: "Suit",
        options: [
          { value: "any", label: "Any Suit" },
          { value: "red", label: "Red Suits" },
          { value: "black", label: "Black Suits" },
          { value: "Spades", label: "Spades" },
          { value: "Hearts", label: "Hearts" },
          { value: "Diamonds", label: "Diamonds" },
          { value: "Clubs", label: "Clubs" },
        ],
        showWhen: {
          parameter: "property_type",
          values: ["suit"],
        },
      },
      {
        id: "enhancement",
        type: "select",
        label: "Enhancement",
        options: [
          { value: "any", label: "Any Enhancement" },
          { value: "none", label: "No Enhancement" },
          { value: "m_gold", label: "Gold" },
          { value: "m_steel", label: "Steel" },
          { value: "m_glass", label: "Glass" },
          { value: "m_wild", label: "Wild" },
          { value: "m_mult", label: "Mult" },
          { value: "m_lucky", label: "Lucky" },
          { value: "m_stone", label: "Stone" },
        ],
        showWhen: {
          parameter: "property_type",
          values: ["enhancement"],
        },
      },
      {
        id: "seal",
        type: "select",
        label: "Seal",
        options: [
          { value: "any", label: "Any Seal" },
          { value: "none", label: "No Seal" },
          { value: "Gold", label: "Gold Seal" },
          { value: "Red", label: "Red Seal" },
          { value: "Blue", label: "Blue Seal" },
          { value: "Purple", label: "Purple Seal" },
        ],
        showWhen: {
          parameter: "property_type",
          values: ["seal"],
        },
      },
      {
        id: "edition",
        type: "select",
        label: "Edition",
        options: [
          { value: "any", label: "Any Edition" },
          { value: "none", label: "No Edition" },
          { value: "e_foil", label: "Foil" },
          { value: "e_holo", label: "Holographic" },
          { value: "e_polychrome", label: "Polychrome" },
          { value: "e_negative", label: "Negative" },
        ],
        showWhen: {
          parameter: "property_type",
          values: ["edition"],
        },
      },
      {
        id: "operator",
        type: "select",
        label: "Operator",
        options: COMPARISON_OPERATORS,
      },
      {
        id: "value",
        type: "number",
        label: "Count",
        min: 0,
        max: 200,
        default: 1,
      },
    ],
    category: "Deck & Jokers",
  },
];

export function getConditionTypeById(
  id: string
): ConditionTypeDefinition | undefined {
  return CONDITION_TYPES.find((conditionType) => conditionType.id === id);
}

export function getConditionsForTrigger(
  triggerId: string
): ConditionTypeDefinition[] {
  return CONDITION_TYPES.filter(
    (condition) =>
      condition.applicableTriggers &&
      condition.applicableTriggers.includes(triggerId)
  );
}
